
.left{:style => "width: 80%;"}
  = f.text_field :title, {:placeholder => "Please enter a title"}

.clear

.twoup-1
  %fieldset
    %legend Item details
    %table.form
      %tr
        %th= f.label :identifier, 'Item ID'
        %td
          = @item.collection.identifier
          == -
          - if @item.new_record?
            = f.text_field :identifier, :class => 'short'
          - else
            = @item.identifier

      %tr
        %td
        %td
          = f.check_box :private
          = f.label :private

      %tr
        %th
          = f.label :description
          %br
          %i (published)
        %td= f.text_area :description, :rows => 5

      %tr
        %th= f.label :originated_on, 'Origination date'
        %td= f.text_field :originated_on, :class => 'dateinput short', :value => params[:originated_on] || @item.originated_on && @item.originated_on.strftime('%d %B %Y')

      %tr
        %th= f.label :originated_on_narrative, 'Origination date free form'
        %td= f.text_field :originated_on_narrative

      %tr
        %td
        %td
          = f.check_box :owned
          = f.label :owned, 'Item held by Paradisec'

      %tr
        %th= f.label :url, 'URL'
        %td= f.text_field :url

      %tr
        %th= f.label :collector_id
        %td= f.collection_select :collector_id, User.alpha, :id, :name, {:include_blank => true}, :data => {:placeholder => 'Choose a collector...'}, :class => 'chzn-select-req'

      %tr
        %th
          - if params[:action] == 'bulk_edit'
            %small Append
            = f.check_box :bulk_edit_append_country_ids
            %br
          = f.label :country_ids, 'Countries'
        %td= f.select :country_ids, Country.alpha.map {|c| [c.name_with_code, c.id]}, {}, :multiple => true, :data => {:placeholder => 'Choose a country...'}, :class => 'chzn-select country'

      %tr
        %th= f.label :language, 'Language as given'
        %td= f.text_field :language

      %tr
        %th
          - if params[:action] == 'bulk_edit'
            %small Append
            = f.check_box :bulk_edit_append_subject_language_ids
            %br
          = f.label :subject_language_ids, 'Subject languages'
        %td
          - ofs = Language.alpha.includes(:item_subject_languages).map { |l| "<option data-country_id=\"#{l.countries.map(&:id).join(',')}\" value=\"#{l.id}\" #{'selected' if @item.subject_language_ids.include?(l.id)}>#{l.name_with_code}</option>" }.join.html_safe
          = f.select :subject_language_ids, ofs, {}, :multiple => true, :data => {:placeholder => 'Choose a language...'}, :class => 'chzn-select language'
          %br
          = link_to 'Copy from Content language', '#', :id => 'copy-subject-language'

      %tr
        %th
          - if params[:action] == 'bulk_edit'
            %small Append
            = f.check_box :bulk_edit_append_content_language_ids
            %br
          = f.label :content_language_ids, 'Content language'
        %td
          - ofs = Language.alpha.includes(:item_content_languages).map { |l| "<option data-country_id=\"#{l.countries.map(&:id).join(',')}\" value=\"#{l.id}\" #{'selected' if @item.content_language_ids.include?(l.id)}>#{l.name_with_code}</option>" }.join.html_safe
          = f.select :content_language_ids, ofs, {}, :multiple => true, :data => {:placeholder => 'Choose a language...'}, :class => 'chzn-select language'
          %br
          = link_to 'Copy from Subject language', '#', :id => 'copy-content-language'

      %tr
        %th= f.label :dialect
        %td= f.text_field :dialect

      %tr
        %th= f.label :region, 'Region / village'
        %td= f.text_field :region

      %tr
        %th= f.label :latitude
        %td= f.text_field :latitude, :class => 'latitude'

      %tr
        %th= f.label :longitude
        %td= f.text_field :longitude, :class => 'longitude'

      %tr
        %th= f.label :zoom
        %td= f.text_field :zoom, :class => 'zoom'

      %tr
        %td{:colspan => 2}
          .map{:data => {:latitude => @item.latitude, :longitude => @item.longitude, :zoom => @item.zoom, :editable => 'true'}}

      %tr
        %th= label_tag :search, 'Search location on map'
        %td= text_field_tag :map_search

      %tr
        %th= f.label :university_id, 'Originating university'
        %td= f.collection_select :university_id, University.alpha, :id, :name, {:include_blank => true}, :data => {:placeholder => 'Choose a university...'}, :class => 'chzn-select'

      %tr
        %th= f.label :operator_id
        %td= f.collection_select :operator_id, User.alpha, :id, :name, {:include_blank => true}, :data => {:placeholder => 'Choose an operator...'}, :class => 'chzn-select'

      %tr
        %th= f.label :discourse_type_id
        %td= f.collection_select :discourse_type_id, DiscourseType.alpha, :id, :name, {:include_blank => true}, :data => {:placeholder => 'Choose a discourse...'}, :class => 'chzn-select'

      %tr
        %th= f.label :agent_id, 'Agents'
        %td
          = f.fields_for :item_agents do |c|
            - if c.object.new_record?
              = c.collection_select :user_id, User.alpha, :id, :name, {:include_blank => true}, :data => {:placeholder => 'Choose a user...'}, :class => 'chzn-select'
              %br
              = c.collection_select :agent_role_id, AgentRole.alpha, :id, :name, {:include_blank => true}, :data => {:placeholder => 'Choose a role...'}, :class => 'chzn-select'
            - else
              = c.object.user.name
              == :
              = c.object.agent_role.name
              == &nbsp;&nbsp;&nbsp;
              = c.check_box :_destroy
              Delete
              %br

.twoup-2
  %fieldset
    %legend Archive information
    %table.form
      %tr
        %td.empty
        %td
          = f.check_box :metadata_exportable
          Ready for metadata export
      %tr
        %td.empty
        %td
          = f.check_box :born_digital
          Born digital
      %tr
        %td.empty
        %td
          = f.check_box :tapes_returned
          Tapes returned to depositor
      %tr
        %th Original media
        %td= f.text_field :original_media

      %tr
        %th Data received
        %td= f.text_field :received_on, :class => 'dateinput short', :value => params[:received_on] || @item.received_on && @item.received_on.strftime('%d %B %Y')

      %tr
        %th Date digitised
        %td= f.text_field :digitised_on, :class => 'dateinput short', :value => params[:digitised_on] || @item.digitised_on && @item.digitised_on.strftime('%d %B %Y')

      %tr
        %th Ingest notes
        %td= f.text_area :ingest_notes

      %tr
        %th Metadata imported
        %td= f.text_field :metadata_imported_on, :class => 'dateinput short', :value => params[:metadata_imported_on] || @item.metadata_imported_on && @item.metadata_imported_on.strftime('%d %B %Y')

      %tr
        %th Metadata exported
        %td= f.text_field :metadata_exported_on, :class => 'dateinput short', :value => params[:metadata_exported_on] || @item.metadata_exported_on && @item.metadata_exported_on.strftime('%d %B %Y')

      %tr
        %th Tracking
        %td= f.text_field :tracking


  %fieldset
    %legend Admin information
    %table.form
      %tr
        %th
          - if params[:action] == 'bulk_edit'
            %small Append
            = f.check_box :bulk_edit_append_admin_ids
            %br
          = f.label :admin_ids, 'Edit access'
        %td= f.select :admin_ids, User.alpha.map {|u| [u.name, u.id]}, {:include_blank => true}, :multiple => true, :data => {:placeholder => 'Choose a user...'}, :class => 'chzn-select'

      %tr
        %th= f.label :access_condition, 'Data access conditions'
        %td= f.collection_select :access_condition_id, AccessCondition.alpha, :id, :name, {:include_blank => true}, :data => {:placeholder => 'Choose a data access condition...'}, :class => 'chzn-select'

      %tr
        %th= f.label :access_narrative, 'Data access details'
        %td= f.text_area :access_narrative, :rows => 5

      %tr
        %th= f.label :admin_comment, 'Comments'
        %td= f.text_area :admin_comment, :rows => 5
