Use this README file to introduce your application and point to useful places in the API for learning more.

Run "rake doc:app" to generate API documentation for your models, controllers, helpers, and libraries.

## Importing all data

Just run

    $ rake import:all

Below are descriptions of the individual import tasks.


## Updating the language & country codes

The language codes in use for NABU are sourced from http://www.ethnologue.com/codes/.

To update them:

* Download the latest version of the three tables from

    http://www.ethnologue.com/codes/default.asp#downloading

* Copy them into the data directory, overwriting the existing files there

* run the different rake tasks to import them

    $ rake import:countries
    $ rake import:languages
    
  The language codes of type "L" will be imported into Nabu.

Done!



## Updating the fields of research codes

The fields of research codes in use for NABU are sourced from http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1297.02008?OpenDocument .
They are an extract from sections 19 and 20, manually formatted.

To update them:

* Download the desired list into a text file at data/ANZSRC.txt and format to the given format

* run the rake task to import them

    $ rake import:fields_of_research
    
Done!


## Importing legacy PARADISEC database

* The legacy database has to be at db/legacy/paradisecDump.sql .

* You don't want to import the tables individually, just run

    $ rake import:all


===

## What the geographic entities mean

* Geographic boxes are specified based on Dublin Core specs: http://dublincore.org/documents/dcmi-box/

* west - east: stretches from -180 to 180
* north - south: stretches from 90 to -90

* Examples: Western Hemisphere
  westlimit=180; eastlimit=0

===

## Crontab setup

Crontab is set up such that the metadata export script and the file import script are run every hour. However, at 3am, they are run in VERBOSE mode, such that if there are any messages, these will be printed and subsequently sent via email.

Note that the cron jobs check if they are disabled from the app (via a disabling file), and that no other job currently runs that is doing the same.

0 0-2,4-23 * * * if [ ! -f /srv/www/nabu/shared/pids/disable_cron ]; then pgrep -f "[b]in/rake archive:export_metadata" > /dev/null; if [ $? = 1 ]; then cd /srv/www/nabu/current && RAILS_ENV=production /usr/local/bin/bundle exec rake archive:export_metadata; fi ; fi
0 0-2,4-23 * * * if [ ! -f /srv/www/nabu/shared/pids/disable_cron ]; then pgrep -f "[b]in/rake archive:import_files" > /dev/null; if [ $? = 1 ]; then cd /srv/www/nabu/current && RAILS_ENV=production /usr/local/bin/bundle exec rake archive:import_files; fi ; fi

0 3 * * * if [ ! -f /srv/www/nabu/shared/pids/disable_cron ]; then pgrep -f "[b]in/rake archive:export_metadata" > /dev/null; if [ $? = 1 ]; then cd /srv/www/nabu/current && RAILS_ENV=production VERBOSE=true /usr/local/bin/bundle exec rake archive:export_metadata; fi ; fi
0 3 * * * if [ ! -f /srv/www/nabu/shared/pids/disable_cron ]; then pgrep -f "[b]in/rake archive:import_files" > /dev/null; if [ $? = 1 ]; then cd /srv/www/nabu/current && RAILS_ENV=production VERBOSE=true /usr/local/bin/bundle exec rake archive:import_files; fi ; fi
